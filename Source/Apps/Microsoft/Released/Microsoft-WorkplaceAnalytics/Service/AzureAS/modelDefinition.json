{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "AzureBlobs/https://__storageAccountName__ blob core windows net/",
        "connectionDetails": {
          "protocol": "azure-blobs",
          "address": {
            "account": "__storageAccountName__",
            "domain": "blob.core.windows.net"
          },
          "authentication": null,
          "query": null
        },
        "options": {},
        "credential": {
          "AuthenticationKind": "Key",
          "Key": "__authenticationKey__"
        }
      }
    ],
    "tables": [
      {
        "name": "PersonHistorical",
        "columns": [
          {
            "name": "PersonHistoricalId",
            "dataType": "string",
            "sourceColumn": "PersonHistoricalId"
          },
          {
            "name": "EmailAddress",
            "dataType": "string",
            "sourceColumn": "EmailAddress"
          },
          {
            "name": "PopulationType",
            "dataType": "string",
            "sourceColumn": "PopulationType"
          },
          {
            "name": "ManagerId",
            "dataType": "string",
            "sourceColumn": "ManagerId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data],",
                "    #\"https://__storageAccountName__ blob core windows net/__containername__/_PersonHistorical csv\" = __containername__1{[#\"Folder Path\"=\"https://__storageAccountName__.blob.core.windows.net/__containername__/\",Name=\"PersonHistorical.csv\"]}[Content],",
                "    #\"Imported CSV\" = Csv.Document(#\"https://__storageAccountName__ blob core windows net/__containername__/_PersonHistorical csv\",[Delimiter=\",\", Columns=19, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"PersonHistoricalId\", type text}, {\"EmailAddress\", type text}, {\"PopulationType\", type text}, {\"ManagerId\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "Meaningful",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "MeaningfulID",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MeaningfulID]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MeaningfulValue",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MeaningfulValue]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MeaningfulDescription",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MeaningfulDescription]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(\"MeaningfulID\",INTEGER,",
                "                        \"MeaningfulValue\",INTEGER,",
                "\t\t\"MeaningfulDescription\",STRING,",
                "{ ",
                "{\"1\",\"1\",\"more than 1\"},",
                "{\"2\",\"2\",\"more than 2\"},",
                "{\"3\",\"3\",\"more than 3\"},",
                "{\"4\",\"4\",\"more than 4\"},",
                "{\"5\",\"5\",\"more than 5\"},",
                "{\"6\",\"6\",\"more than 6\"},",
                "{\"7\",\"7\",\"more than 7\"},",
                "{\"8\",\"8\",\"more than 8\"},",
                "{\"9\",\"9\",\"more than 9\"},",
                "{\"10\",\"10\",\"more than 10\"},",
                "{\"11\",\"11\",\"more than 11\"},",
                "{\"12\",\"12\",\"more than 12\"},",
                "{\"13\",\"13\",\"more than 13\"},",
                "{\"14\",\"14\",\"more than 14\"},",
                "{\"15\",\"15\",\"more than 15\"},",
                "{\"16\",\"16\",\"more than 16\"},",
                "{\"17\",\"17\",\"more than 17\"},",
                "{\"18\",\"18\",\"more than 18\"}",
                "}",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "Interactions",
        "columns": [
          {
            "name": "InteractionID",
            "dataType": "string",
            "sourceColumn": "InteractionID"
          },
          {
            "name": "LocalStartTime",
            "dataType": "dateTime",
            "sourceColumn": "LocalStartTime"
          },
          {
            "name": "nodepid",
            "dataType": "string",
            "sourceColumn": "nodepid"
          },
          {
            "name": "edgepid",
            "dataType": "string",
            "sourceColumn": "edgepid"
          },
          {
            "name": "PersonTimeSpentInMinutes",
            "dataType": "double",
            "sourceColumn": "PersonTimeSpentInMinutes"
          },
          {
            "name": "DurationMinutesAdjusted",
            "dataType": "int64",
            "sourceColumn": "DurationMinutesAdjusted"
          },
          {
            "name": "attendeecount",
            "dataType": "int64",
            "sourceColumn": "attendeecount"
          },
          {
            "name": "InteractionType",
            "dataType": "string",
            "sourceColumn": "InteractionType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data],",
                "    #\"https://__storageAccountName__ blob core windows net/__containername__/_Interactions csv\" = __containername__1{[#\"Folder Path\"=\"https://__storageAccountName__.blob.core.windows.net/__containername__/\",Name=\"Interactions.csv\"]}[Content],",
                "    #\"Imported CSV\" = Csv.Document(#\"https://__storageAccountName__ blob core windows net/__containername__/_Interactions csv\",[Delimiter=\",\", Columns=8, Encoding=65001, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"InteractionID\", type text}, {\"LocalStartTime\", type datetime}, {\"nodepid\", type text}, {\"edgepid\", type text}, {\"PersonTimeSpentInMinutes\", type number}, {\"DurationMinutesAdjusted\", Int64.Type}, {\"attendeecount\", Int64.Type}, {\"InteractionType\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Meaningful_Para",
            "expression": " IF(HASONEVALUE(Meaningful[MeaningfulValue]),VALUES(Meaningful[MeaningfulValue]),blank())"
          },
          {
            "name": "InteractionsCount",
            "expression": " COUNTROWS(SUMMARIZE(Interactions,Interactions[InteractionID],Interactions[InteractionType]))"
          },
          {
            "name": "MeaningfulInteractions",
            "expression": " CALCULATE(if([InteractionsCount]>= [Meaningful_Para],1,0))"
          }
        ]
      },
      {
        "name": "MailParticipants",
        "columns": [
          {
            "name": "MailId",
            "dataType": "string",
            "sourceColumn": "MailId"
          },
          {
            "name": "PersonHistoricalId",
            "dataType": "string",
            "sourceColumn": "PersonHistoricalId"
          },
          {
            "name": "IsSender",
            "dataType": "boolean",
            "sourceColumn": "IsSender"
          },
          {
            "name": "LocalSentTime",
            "dataType": "dateTime",
            "sourceColumn": "LocalSentTime"
          },
          {
            "name": "PersonTimeSpentInMinutes",
            "dataType": "double",
            "sourceColumn": "PersonTimeSpentInMinutes"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data],",
                "    #\"https://__storageAccountName__ blob core windows net/__containername__/_MailParticipants csv\" = __containername__1{[#\"Folder Path\"=\"https://__storageAccountName__.blob.core.windows.net/__containername__/\",Name=\"MailParticipants.csv\"]}[Content],",
                "    #\"Imported CSV\" = Csv.Document(#\"https://__storageAccountName__ blob core windows net/__containername__/_MailParticipants csv\",[Delimiter=\",\", Columns=5, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"MailId\", type text}, {\"PersonHistoricalId\", type text}, {\"IsSender\", type logical}, {\"LocalSentTime\", type datetime}, {\"PersonTimeSpentInMinutes\", type number}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "Mails",
        "columns": [
          {
            "name": "MailId",
            "dataType": "string",
            "sourceColumn": "MailId"
          },
          {
            "name": "ConversationId",
            "dataType": "string",
            "sourceColumn": "ConversationId"
          },
          {
            "name": "Subject",
            "dataType": "string",
            "sourceColumn": "Subject"
          },
          {
            "name": "SentTime",
            "dataType": "dateTime",
            "sourceColumn": "SentTime"
          },
          {
            "name": "SenderTimeSpentInMinutes",
            "dataType": "double",
            "sourceColumn": "SenderTimeSpentInMinutes"
          },
          {
            "name": "NumberOfRecipients",
            "dataType": "int64",
            "sourceColumn": "NumberOfRecipients"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data],",
                "    #\"https://__storageAccountName__ blob core windows net/__containername__/_Mails csv\" = __containername__1{[#\"Folder Path\"=\"https://__storageAccountName__.blob.core.windows.net/__containername__/\",Name=\"Mails.csv\"]}[Content],",
                "    #\"Imported CSV\" = Csv.Document(#\"https://__storageAccountName__ blob core windows net/__containername__/_Mails csv\",[Delimiter=\",\", Columns=6, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"MailId\", type text}, {\"ConversationId\", type text}, {\"Subject\", type text}, {\"SentTime\", type datetime}, {\"SenderTimeSpentInMinutes\", type number}, {\"NumberOfRecipients\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "MeetingParticipants",
        "columns": [
          {
            "name": "MeetingId",
            "dataType": "string",
            "sourceColumn": "MeetingId"
          },
          {
            "name": "PersonHistoricalId",
            "dataType": "string",
            "sourceColumn": "PersonHistoricalId"
          },
          {
            "name": "LocalStartTime",
            "dataType": "dateTime",
            "sourceColumn": "LocalStartTime"
          },
          {
            "name": "IsOrganizer",
            "dataType": "boolean",
            "sourceColumn": "IsOrganizer"
          },
          {
            "name": "IsDoubleBooked",
            "dataType": "boolean",
            "sourceColumn": "IsDoubleBooked"
          },
          {
            "name": "Response",
            "dataType": "string",
            "sourceColumn": "Response"
          },
          {
            "name": "DurationMinutesAdjusted",
            "dataType": "int64",
            "sourceColumn": "DurationMinutesAdjusted"
          },
          {
            "name": "NumberOfEmailsDuringMeeting",
            "dataType": "int64",
            "sourceColumn": "NumberOfEmailsDuringMeeting"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data],",
                "    #\"https://__storageAccountName__ blob core windows net/__containername__/_MeetingParticipants csv\" = __containername__1{[#\"Folder Path\"=\"https://__storageAccountName__.blob.core.windows.net/__containername__/\",Name=\"MeetingParticipants.csv\"]}[Content],",
                "    #\"Imported CSV\" = Csv.Document(#\"https://__storageAccountName__ blob core windows net/__containername__/_MeetingParticipants csv\",[Delimiter=\",\", Columns=8, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"MeetingId\", type text}, {\"PersonHistoricalId\", type text}, {\"LocalStartTime\", type datetime}, {\"IsOrganizer\", type logical}, {\"IsDoubleBooked\", type logical}, {\"Response\", type text}, {\"DurationMinutesAdjusted\", Int64.Type}, {\"NumberOfEmailsDuringMeeting\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "Meetings",
        "columns": [
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name"
          },
          {
            "name": "Extension",
            "dataType": "string",
            "sourceColumn": "Extension"
          },
          {
            "name": "Date accessed",
            "dataType": "dateTime",
            "sourceColumn": "Date accessed"
          },
          {
            "name": "Date modified",
            "dataType": "dateTime",
            "sourceColumn": "Date modified"
          },
          {
            "name": "Date created",
            "dataType": "dateTime",
            "sourceColumn": "Date created"
          },
          {
            "name": "Folder Path",
            "dataType": "string",
            "sourceColumn": "Folder Path"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AzureBlobs/https://__storageAccountName__ blob core windows net/\",",
                "    __containername__1 = Source{[Name=\"__containername__\"]}[Data]",
                "in",
                "    __containername__1"
              ]
            }
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}